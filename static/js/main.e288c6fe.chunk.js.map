{"version":3,"sources":["components/Header/Header.jsx","utils.js","App.js","index.js"],"names":["Header","className","hash_MD5","text","key","a","md5","require","length","hexString","hmac","compute","then","forEach","num","toString","console","log","hash_sha1","sha1","hash_sha256","sha256","App","hashFunctions","useState","hashFunctionVal","setHashFunctionVal","inputText","setInputText","inputKey","setInputKey","outputText","setOutputText","onChange","e","target","value","map","hashFunction","type","onClick","event","prepareText","text_bin","c","bin","charCodeAt","Array","join","originalSize","paddedOnce","originalSizeBin","md4","numBlocks","blocks","Uint32Array","i","o","parseInt","substr","A","B","C","D","round_1","X","s","temp","Y","Z","f","round_2","g","round_3","h","AA","BB","CC","DD","j","hash_MD4","readOnly","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e288c6fe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n      <header className=\"header\">\r\n        <div className=\"header-item\">HASH CALCULATOR</div>\r\n      </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import hmac from \"js-crypto-hmac\";\r\n\r\nexport const hash_MD4 = (text, key) => {\r\n  let text_bin = \"\";\r\n\r\n  /* read each character of message and append 0s \r\n  to complete 16 bits for each character */\r\n  [...text].forEach((c) => {\r\n    let bin = c.charCodeAt().toString(2);\r\n    text_bin += Array(8 - bin.length + 1).join(\"0\") + bin;\r\n  });\r\n  let originalSize = text_bin.length;\r\n\r\n  /* append padding bits */\r\n  text_bin += \"1\";\r\n  let paddedOnce = false;\r\n  while ((text_bin.length + 64) % 512 !== 0 || !paddedOnce) {\r\n    text_bin += \"0\";\r\n    paddedOnce = true;\r\n  }\r\n\r\n  /* append length */\r\n  let originalSizeBin = originalSize.toString(2);\r\n  let md4 = require(\"js-md4\");\r\n  originalSizeBin =\r\n    Array(64 - originalSizeBin.length + 1).join(\"0\") + originalSizeBin;\r\n  text_bin += originalSizeBin;\r\n\r\n  /* divide in blocks of 32 bits */\r\n  let size = 32;\r\n  let numBlocks = text_bin.length / size;\r\n  text_bin = md4(text);\r\n  let blocks = new Uint32Array(numBlocks);\r\n\r\n  for (let i = 0, o = 0; i < numBlocks; ++i, o += size) {\r\n    blocks[i] = parseInt(text_bin.substr(o, size), 2);\r\n  }\r\n\r\n  /* initialize MD buffer */\r\n  let A = 0x67452301;\r\n  let B = 0xefcdab89;\r\n  let C = 0x98badcfe;\r\n  let D = 0x10325476;\r\n\r\n  /* process message  */\r\n  /* define 3 auxiliary functions */\r\n  const f = (X, Y, Z) => (X & Y) | (~X & Z);\r\n  const g = (X, Y, Z) => (X & Y) | (X & Z) | (Y & Z);\r\n  const h = (X, Y, Z) => X ^ Y ^ Z;\r\n\r\n  /* define round functions */\r\n  const round_1 = (X, A, B, C, D, i, s) => {\r\n    let temp = A + f(B, C, D) + X[i];\r\n    return (temp << s) | (temp >>> (32 - s));\r\n  };\r\n  const round_2 = (X, A, B, C, D, i, s) => {\r\n    let temp = A + g(B, C, D) + X[i] + 0x5a827999;\r\n    return (temp << s) | (temp >>> (32 - s));\r\n  };\r\n  const round_3 = (X, A, B, C, D, i, s) => {\r\n    let temp = A + h(B, C, D) + X[i] + 0x6ed9eba1;\r\n    return (temp << s) | (temp >>> (32 - s));\r\n  };\r\n\r\n  let X = new Uint32Array(16);\r\n  for (let i = 0; i < blocks.length / 16; i++) {\r\n    let AA = A;\r\n    let BB = B;\r\n    let CC = C;\r\n    let DD = D;\r\n    for (let j = 0; j < 16; j++) {\r\n      X[j] = blocks[i * 16 + j];\r\n    }\r\n\r\n    /* round 1 */\r\n    for (let j = 0; j <= 12; j += 4) {\r\n      A = round_1(X, A, B, C, D, j, 3);\r\n      D = round_1(X, D, A, B, C, j + 1, 7);\r\n      C = round_1(X, C, D, A, B, j + 2, 11);\r\n      B = round_1(X, B, C, D, A, j + 3, 19);\r\n    }\r\n\r\n    /* round 2 */\r\n    for (let j = 0; j < 4; j++) {\r\n      A = round_2(X, A, B, C, D, j, 3);\r\n      D = round_2(X, D, A, B, C, j + 4, 5);\r\n      C = round_2(X, C, D, A, B, j + 8, 9);\r\n      B = round_2(X, B, C, D, A, j + 12, 13);\r\n    }\r\n\r\n    /* round 3 */\r\n    A = round_3(X, A, B, C, D, 0, 3);\r\n    D = round_3(X, D, A, B, C, 4, 9);\r\n    C = round_3(X, C, D, A, B, 8, 11);\r\n    B = round_3(X, B, C, D, A, 12, 15);\r\n    A = round_3(X, A, B, C, D, 2, 3);\r\n    D = round_3(X, D, A, B, C, 10, 9);\r\n    C = round_3(X, C, D, A, B, 6, 11);\r\n    B = round_3(X, B, C, D, A, 14, 15);\r\n    A = round_3(X, A, B, C, D, 1, 3);\r\n    D = round_3(X, D, A, B, C, 9, 9);\r\n    C = round_3(X, C, D, A, B, 5, 11);\r\n    B = round_3(X, B, C, D, A, 13, 15);\r\n    A = round_3(X, A, B, C, D, 3, 3);\r\n    D = round_3(X, D, A, B, C, 11, 9);\r\n    C = round_3(X, C, D, A, B, 7, 11);\r\n    B = round_3(X, B, C, D, A, 15, 15);\r\n\r\n    A += AA;\r\n    B += BB;\r\n    C += CC;\r\n    D += DD;\r\n  }\r\n\r\n  return text_bin;\r\n  /* return A.toString(16) + B.toString(16) + C.toString(16) + D.toString(16); */\r\n};\r\n\r\nexport const hash_MD5 = async (text, key) => {\r\n  let md5 = require(\"md5\");\r\n  if (key.length > 0) {\r\n    let hexString = \"\";\r\n    return await hmac.compute(key, text, \"MD5\").then((hmac) => {\r\n      hmac.forEach((num) => {\r\n        hexString += num.toString(16);\r\n      });\r\n      console.log(hmac);\r\n      console.log(hexString);\r\n      return hexString;\r\n    });\r\n  } else return md5(text);\r\n};\r\n\r\nexport const hash_sha1 = async (text, key) => {\r\n  let sha1 = require(\"js-sha1\");\r\n  if (key.length > 0) {\r\n    let hexString = \"\";\r\n    return await hmac.compute(key, text, \"SHA-1\").then((hmac) => {\r\n      hmac.forEach((num) => {\r\n        hexString += num.toString(16);\r\n      });\r\n      console.log(hmac);\r\n      console.log(hexString);\r\n      return hexString;\r\n    });\r\n  } else return sha1(text);\r\n};\r\n\r\nexport const hash_sha256 = async (text, key) => {\r\n  let sha256 = require(\"js-sha256\");\r\n  if (key.length > 0) {\r\n    let hexString = \"\";\r\n    return await hmac.compute(key, text, \"SHA-256\").then((hmac) => {\r\n      hmac.forEach((num) => {\r\n        hexString += num.toString(16);\r\n      });\r\n      console.log(hmac);\r\n      console.log(hexString);\r\n      return hexString;\r\n    });\r\n  } else {\r\n    return sha256(text);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport { hash_MD4, hash_MD5, hash_sha1, hash_sha256 } from \"./utils\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const hashFunctions = [\"MD4\", \"MD5\", \"SHA-1\", \"SHA-256\"];\n\n  const [hashFunctionVal, setHashFunctionVal] = useState(hashFunctions[0]);\n  const [inputText, setInputText] = useState(\"\");\n  const [inputKey, setInputKey] = useState(\"\");\n  const [outputText, setOutputText] = useState(\"\");\n\n  const generate_hash_msg = (event) => {\n    let prepareText = inputText;\n    switch (hashFunctionVal) {\n      case \"MD4\":\n        prepareText = hash_MD4(inputText, inputKey);\n        break;\n      case \"MD5\":\n        hash_MD5(inputText, inputKey).then((hexString) => {\n          setOutputText(hexString)\n        });\n        break;\n      case \"SHA-1\":\n        hash_sha1(inputText, inputKey).then((hexString) => {\n          setOutputText(hexString)\n        });\n        break;\n      case \"SHA-256\":\n        hash_sha256(inputText, inputKey).then((hexString) => {\n          setOutputText(hexString)\n        });\n        break;\n      default:\n        break;\n    }\n    setOutputText(prepareText);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <section>\n        <h1>Calculadora de funciones hash</h1>\n        <h2>Seleccione el tipo de función Hash:</h2>\n        <select onChange={(e) => setHashFunctionVal(e.target.value)}>\n          {hashFunctions.map((hashFunction) => (\n            <option key={hashFunction} value={hashFunction}>\n              {hashFunction}\n            </option>\n          ))}\n        </select>\n        Clave(HMAC opcional):\n        <input\n          type=\"text\"\n          onChange={(e) => setInputKey(e.target.value)}\n        ></input>\n        <h2>Ingrese el texto:</h2>\n        <textarea onChange={(e) => setInputText(e.target.value)}></textarea>\n        <button onClick={generate_hash_msg}>GENERAR:</button>\n        <h2>Resultado de la función hash:</h2>\n        <textarea readOnly value={outputText}></textarea>\n        <h2> </h2>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}